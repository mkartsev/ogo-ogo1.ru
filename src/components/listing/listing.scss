.listing-controls {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: stretch;
  gap: $spacer * 0.5;
  padding-right: $spacer * 0.5;
  padding-left: $spacer * 0.5;
  font-size: var(--font-size-sm);
  background: var(--info, $info);

  &__filter {
    margin: $spacer * 0.5 0;
  }

  &__qty {
    display: none;
    flex-flow: row nowrap;
    align-items: center;
    gap: $spacer;
    margin: $spacer * 0.5 0;

    &-label {
      color: var(--light, $light);
      white-space: nowrap;
    }

    &-list {
      display: flex;
      flex-flow: row nowrap;
      gap: $spacer * 0.5;
      align-items: center;
      align-self: stretch;
      list-style: none;
      margin: 0;
      padding: 0;
    }

    &-item {
      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;
      height: 100%;
    }

    &-link {
      display: flex;
      align-items: center;
      padding: $spacer * 0.25;
      color: var(--light, $light);

      &.is-active,
      &:hover {
        color: var(--white, $white);
        text-shadow: 0 0 currentColor;
      }
    }
  }

  &__sort {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    gap: $spacer * 0.5;
    margin: $spacer * 0.5 0;

    &-label {
      color: var(--light, $light);
      white-space: nowrap;
    }

    &-select {
      max-width: 140px;
      height: 32px;
      padding-right: 30px;
      padding-left: 8px;
      background-size: 16px;
      background-position: right 10px center;
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1.146 5.146a.5.5 0 0 1 .708 0l6.313 6.314 6.313-6.314a.5.5 0 1 1 .707.708L8.52 12.52a.5.5 0 0 1-.707 0L1.146 5.854a.5.5 0 0 1 0-.708Z" clip-rule="evenodd"/></svg>');
    }

    // &-list {
    //   display: none;
    //   flex-flow: row nowrap;
    //   gap: $spacer;
    //   align-items: center;
    //   align-self: stretch;
    //   list-style: none;
    //   margin: 0;
    //   padding: 0;
    // }

    &-item {
      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;
      height: 100%;
    }

    &-link {
      display: flex;
      align-items: center;
      position: relative;
      color: var(--light, $light);
      padding-right: 20px;

      &:after {
        content: "";
        position: absolute;
        top: 50%;
        right: 0;
        width: 16px;
        height: 16px;
        background-size: 12px;
        background-position: center;
        background-repeat: no-repeat;
        transform: translateY(-50%);
      }

      &.desc:after {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1.146 5.146a.5.5 0 0 1 .708 0l6.313 6.314 6.313-6.314a.5.5 0 1 1 .707.708L8.52 12.52a.5.5 0 0 1-.707 0L1.146 5.854a.5.5 0 0 1 0-.708Z" clip-rule="evenodd"/></svg>');
      }
      &.asc:after {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M7.813 3.146a.5.5 0 0 1 .707 0l6.667 6.667a.5.5 0 0 1-.707.707L8.167 4.207 1.854 10.52a.5.5 0 1 1-.708-.707l6.667-6.667Z" clip-rule="evenodd"/></svg>');
      }

      &.is-active,
      &:hover {
        color: var(--white, $white);
        text-shadow: 0 0 currentColor;
      }
    }
  }

  &__view {
    display: none;
    flex-flow: row nowrap;
    align-items: center;
    gap: $spacer * 0.5;

    &-label {
      color: var(--light, $light);
      white-space: nowrap;
    }

    &-button {
      position: relative;
      &:before {
        content: "";
        display: block;
        position: absolute;
        width: 24px;
        height: 24px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-repeat: no-repeat;
        background-position: center;
        background-size: 24px;
      }

      &[data-view="list"] {
        &:before {
          background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="24" height="24" viewBox="0 0 24 24"><path fill-rule="evenodd" d="M2.5 4A1.5 1.5 0 0 1 4 2.5h16A1.5 1.5 0 0 1 21.5 4v5a1.5 1.5 0 0 1-1.5 1.5H4A1.5 1.5 0 0 1 2.5 9V4ZM4 3.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h16a.5.5 0 0 0 .5-.5V4a.5.5 0 0 0-.5-.5H4ZM2.5 15A1.5 1.5 0 0 1 4 13.5h16a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1-1.5 1.5H4A1.5 1.5 0 0 1 2.5 20v-5Zm1.5-.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h16a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5H4Z" clip-rule="evenodd"/></svg>');
        }
        &:hover:before,
        &.is-active:before {
          background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="24" height="24" viewBox="0 0 24 24"><path d="M4 2.5A1.5 1.5 0 0 0 2.5 4v5A1.5 1.5 0 0 0 4 10.5h16A1.5 1.5 0 0 0 21.5 9V4A1.5 1.5 0 0 0 20 2.5H4Zm0 11A1.5 1.5 0 0 0 2.5 15v5A1.5 1.5 0 0 0 4 21.5h16a1.5 1.5 0 0 0 1.5-1.5v-5a1.5 1.5 0 0 0-1.5-1.5H4Z"/></svg>');
        }
      }

      &[data-view="grid"] {
        &:before {
          background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="24" height="24" viewBox="0 0 24 24"><path fill-rule="evenodd" d="M2.5 4A1.5 1.5 0 0 1 4 2.5h5A1.5 1.5 0 0 1 10.5 4v5A1.5 1.5 0 0 1 9 10.5H4A1.5 1.5 0 0 1 2.5 9V4ZM4 3.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5V4a.5.5 0 0 0-.5-.5H4Zm9.5.5A1.5 1.5 0 0 1 15 2.5h5A1.5 1.5 0 0 1 21.5 4v5a1.5 1.5 0 0 1-1.5 1.5h-5A1.5 1.5 0 0 1 13.5 9V4Zm1.5-.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5V4a.5.5 0 0 0-.5-.5h-5ZM2.5 15A1.5 1.5 0 0 1 4 13.5h5a1.5 1.5 0 0 1 1.5 1.5v5A1.5 1.5 0 0 1 9 21.5H4A1.5 1.5 0 0 1 2.5 20v-5Zm1.5-.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5H4Zm9.5.5a1.5 1.5 0 0 1 1.5-1.5h5a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1-1.5 1.5h-5a1.5 1.5 0 0 1-1.5-1.5v-5Zm1.5-.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5Z" clip-rule="evenodd"/></svg>');
        }
        &:hover:before,
        &.is-active:before {
          background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23ffffff" width="24" height="24" viewBox="0 0 24 24"><path d="M4 2.5A1.5 1.5 0 0 0 2.5 4v5A1.5 1.5 0 0 0 4 10.5h5A1.5 1.5 0 0 0 10.5 9V4A1.5 1.5 0 0 0 9 2.5H4Zm11 0A1.5 1.5 0 0 0 13.5 4v5a1.5 1.5 0 0 0 1.5 1.5h5A1.5 1.5 0 0 0 21.5 9V4A1.5 1.5 0 0 0 20 2.5h-5Zm-11 11A1.5 1.5 0 0 0 2.5 15v5A1.5 1.5 0 0 0 4 21.5h5a1.5 1.5 0 0 0 1.5-1.5v-5A1.5 1.5 0 0 0 9 13.5H4Zm11 0a1.5 1.5 0 0 0-1.5 1.5v5a1.5 1.5 0 0 0 1.5 1.5h5a1.5 1.5 0 0 0 1.5-1.5v-5a1.5 1.5 0 0 0-1.5-1.5h-5Z"/></svg>');
        }
      }
    }
  }

  &__pagination {
    display: none;
    flex-flow: row nowrap;
    align-items: stretch;
    gap: $spacer * 0.5;

    &-item {
      display: inline-flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: center;
      min-width: 40px;
      min-height: 40px;
      color: var(--white, $white);

      &.is-active {
        background: var(--blue-600, $blue-600);
      }

      &:hover {
        color: var(--white, $white);
        background: var(--blue-600, $blue-600);
      }
    }
  }

  @media screen and (min-width: 380px) {
    &__sort {
      gap: $spacer;
      &-select {
        max-width: 164px;
        padding-right: 40px;
      }
    }
  }

  @media screen and (min-width: 769px) {
    gap: $spacer;
    &__view {
      display: flex;
    }
  }

  @media screen and (min-width: 769px) and (max-width: 1023px) {
    &__view {
      margin-left: auto;
    }
  }

  @include media-breakpoint-up(lg) {
    padding-right: $spacer;
    padding-left: $spacer;
    &__qty {
      display: flex;
    }
    &__pagination {
      display: flex;
    }
    &__filter {
      display: none;
    }
  }
}

.listing-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: min-content;
  gap: $spacer * 0.5;

  &--view-grid,
  &--view-list {
    grid-template-columns: repeat(2, 1fr);
  }

  @media screen and (min-width: 600px) and (max-width: 768px) {
    grid-template-columns: repeat(2, 1fr);

    &--view-grid,
    &--view-list {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (min-width: 769px) and (max-width: 1023px) {
    grid-template-columns: repeat(2, 1fr);

    &--view-list {
      grid-template-columns: 1fr;
    }
  }

  @include media-breakpoint-up(lg) {
    grid-template-columns: repeat(var(--columns, 3), 1fr);

    &--view-list {
      grid-template-columns: 1fr;
    }
    &--view-grid {
      // --columns определяется в инлайн стилях этого блока
      grid-template-columns: repeat(var(--columns, 3), 1fr);
    }
  }
}
